services:
  postgres:
    image: postgres:15-alpine
    container_name: sala_postgres
    environment:
      POSTGRES_DB: sala_db
      POSTGRES_USER: sala_user
      POSTGRES_PASSWORD: sala_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sala_user -d sala_db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: sala_web
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - DATABASE_URL=postgresql://sala_user:sala_password@postgres:5432/sala_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=sala_db
      - POSTGRES_USER=sala_user
      - POSTGRES_PASSWORD=sala_password
    command: sh -c "echo 'ðŸš€ Iniciando...' && npx prisma generate && echo 'âœ… Prisma Client gerado' && npx prisma db push && echo 'âœ… Schema aplicado' && npm run db:seed && echo 'âœ… Dados populados' && npm run dev"
    stdin_open: true
    tty: true
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
