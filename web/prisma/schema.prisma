// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  role      Role     @default(USER)
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reservations Reservation[]

  @@map("users")
}

model Room {
  id          String      @id @default(cuid())
  name        String
  description String?
  status      RoomStatus  @default(LIVRE)
  capacity    Int?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  items        Item[]
  reservations Reservation[]

  @@map("rooms")
}

model Item {
  id            String   @id @default(cuid())
  name          String
  description   String?
  specifications String[] // Array of specifications
  quantity      Int      @default(1)
  icon          String?
  roomId        String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  room Room? @relation(fields: [roomId], references: [id], onDelete: SetNull)

  @@map("items")
}

model Reservation {
  id        String   @id @default(cuid())
  userId    String
  roomId    String
  startTime DateTime
  endTime   DateTime
  purpose   String?
  status    ReservationStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("reservations")
}

enum Role {
  ADMIN
  USER
}

enum RoomStatus {
  LIVRE
  EM_USO
  RESERVADO
}

enum ReservationStatus {
  ACTIVE
  CANCELLED
  COMPLETED
}
